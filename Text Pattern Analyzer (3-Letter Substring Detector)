# -*- coding: utf-8 -*-
"""List/set

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10oJEw0MXOXwPnIJ-FyN-Yak3K011nkJo
"""

for i in range(len(my_str)-2): #length,can change
  sub_str= my_str[i+i+3] #number of sub_str
list_of_subs.append(sub_str) # list with all 3 letter substrings
print(f'list of all subs, {list of subs}')
set_of_subs= set(list_of_subs) #convert list to set
print (f'set of al subs= {set_of_subs}')
print()
max_count= 0 #count the max ocuring 3-letter substrngs
max_sub = ''
for sub in set_of_subs:
  count= list_of_subs.count(sub)
  if count>max_count:




list of all subs= ['aaa','bbb']

file=open(f'/content/drive/My Drive/pride.txt')
string = file.real()

special_char = '()!,.?'\n '
for i in special_char:
  string=string.replace(i,'')
list_of_subs = []

#Practic problem 11
string1 ='this is an example'
list1= string1.split()
list1

'''
@Description: The program reads the uploaded text and scans it for every 3-letter
word combination. It then outputs the 3 letter combination that occurs the most
often, as well as how many times that combination occurs.
@DateCreated: 10/18/2023
@Version: 1.00
'''
my_file = open('pride.txt')
my_string = my_file.read()
my_dict = my_string

my_string = my_string.replace(" ", "")
my_string = my_string.replace("\n","")
max_substring = "" #initialize max_substring to blank
max_count=0 #initialize max count to 0
for i in range(len(my_string) - 2):
  #The program reads the string from the start until the last 2 characters as
  #there can be no 3 letter characters that start after the last 2
  current_substring = my_string[i:i+3]
  #[i:i+3] restricts to 3 letter words
  current_count = my_string[i+3:].count(current_substring)
  #We assign current count with how many times the i+3 word occurs

  if current_count > max_count:
    max_substring = current_substring
    #we replace max_substring with current_substring if its count is greater than
    #the previous max count
    max_count = current_count
    #we then replace the max count with the new current_substrings count
    #Finally we print the max_substring and the max_count
print(f"The most occurring substring is '{max_substring}' which occurs {max_count} times.")
